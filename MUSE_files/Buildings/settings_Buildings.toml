# Global Settings - REQUIRED
time_framework = [2010, 2015, 2020, 2025, 2030, 2035, 2040, 2045, 2050]  # Time periods for the simulation
foresight = 5  # Must be a multiple of the minimum separation between years in `time_framework`
regions = ["UK"]  # List of modeled regions
interest_rate = 0.1  # Discount rate for economic calculations
interpolation_mode = "Active"  # Mode for data interpolation
log_level = "info"  # Logging level; options: debug, info, warning, error, critical

# Convergence Parameters
equilibrium_variable = "demand"  # Variable to evaluate equilibrium
maximum_iterations = 100  # Maximum number of iterations for convergence
tolerance = 0.1  # Convergence tolerance for equilibrium variable
tolerance_unmet_demand = -0.1  # Allowed unmet demand (negative values)

# Global Input Files
[global_input_files]
projections = "{path}/double_agents/Projections.csv"  # File for demand projections
global_commodities = "{path}/double_agents/GlobalCommodities.csv"  # File for global commodity data

# Sector Configuration: Buildings

# Building Presets
[sectors.building_presets]
type = "presets"
priority = 0  # Lower priority compared to default settings
consumption_path = "{path}/double_agents/Consumption*.csv"  # Path to consumption data


[sectors.buildings]
type = "default"
priority = 1  # Execution priority of this sector
dispatch_production = "share"  # Dispatch production method

# Input Data for Buildings
technodata = "{path}/double_agents/Technodata.csv"
technodata_timeslices = "{path}/double_agents/TechnodataTimeslices.csv"
commodities_in = "{path}/double_agents/CommIn.csv"
commodities_out = "{path}/double_agents/CommOut.csv"

# Subsector Configuration
[sectors.building.subsectors.retro_and_new]
agents = "{path}/double_agents/Agents.csv"  # Agent-specific configuration
existing_capacity = "{path}/double_agents/ExistingCapacity.csv"  # Existing capacity details

# Timeslice Configuration
[timeslices]
W.Night = 638.75  # Winter Night
W.Day = 912.5  # Winter Day
W.Peak = 273.75  # Winter Peak (previously "Evening_peak")
W.Evening = 365.0  # Winter Evening (previously "Late_evening")
P.Night = 638.75  # Spring Night
P.Day = 912.5  # Spring Day
P.Peak = 273.75  # Spring Peak
P.Evening = 365.0  # Spring Evening
S.Night = 638.75  # Summer Night
S.Day = 912.5  # Summer Day
S.Peak = 273.75  # Summer Peak
S.Evening = 365.0  # Summer Evening
A.Night = 638.75  # Autumn Night
A.Day = 912.5  # Autumn Day
A.Peak = 273.75  # Autumn Peak
A.Evening = 365.0  # Autumn Evening

level_names = ["season", "period"]  # Labels for timeslice levels

# Solver and Constraints
lpsolver = "adhoc"  # "scipy" or "adhoc"
constraints = [
    "max_production",
    "max_capacity_expansion",
    "demand",
    "search_space"
]  # Optional; custom constraints can be added

demand_share = "standard_demand"  # Optional; defaults to "new_and_retro"
forecast = 5  # Optional; defaults to 5

# Optional: Carbon Budget Control
[carbon_budget_control]
budget = []  # Specify carbon budget constraints here


# Output Settings for Buildings Sector
[[sectors.building.outputs]]
filename = "{cwd}/{default_output_dir}/{Sector}/{Quantity}/{year}{suffix}"  # Output file path
quantity = "capacity"
sink = "csv"
overwrite = true
index = false


# General Output Settings
[[outputs]]
quantity = "prices"
sink = "aggregate"  # Aggregated output
filename = "{cwd}/{default_output_dir}/MCA{Quantity}.csv"  # Output file path

[[outputs]]
quantity = "capacity"
sink = "aggregate"
filename = "{cwd}/{default_output_dir}/MCA{Quantity}.csv"
index = false
keep_columns = [
    "technology", "dst_region", "region", "installed",
    "agent", "sector", "type", "year", "capacity"
]  # Columns to retain in the output

[[outputs]]
quantity = "consumption"
sink = "aggregate"
filename = "{path}/double_agents/{default_output_dir}/MCA{Quantity}.csv"
# Uncomment the line below to specify columns explicitly:
# columns = ["commodity", "region", "installed", "technology", "year", "agent", "category", "sector", "consumption"]
